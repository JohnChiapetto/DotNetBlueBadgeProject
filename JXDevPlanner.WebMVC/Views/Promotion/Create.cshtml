@model JXDevPlanner.Models.PromotionCreate

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>PromotionCreate</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Summary, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Summary, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Summary, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Detail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Detail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Detail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.HiddenFor(model=>model.PlanId)
            @*@Html.LabelFor(model => model.PlanId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PlanId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PlanId, "", new { @class = "text-danger" })
            </div>*@
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FromCategory, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <span>@JXDevPlanner.Data.PlanItem.CategoryStr(Model.FromCategory)</span>
                @*@Html.DisplayFor(model => /*model.FromCategory*/JXDevPlanner.Data.PlanItem.CategoryStr(model.FromCategory), new { htmlAttributes = new { @class = "form-control" } })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model=>model.ToCategory,new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select class="form-control" id="ToCategory" name="ToCategory">
                    @if (new JXDevPlanner.Data.ApplicationDbContext().PlanItems.Where(e => e.PlanItemID == Model.PlanId).Single().Category != 0)
                    {
                        <option value="5">Proposed</option>
                        <option value="4">Promised</option>
                        <option value="3">Planned</option>
                        <option value="2">Indev</option>
                        <option value="1">Working</option>
                        <option value="0">Stable</option>
                    }
                </select>
            </div>
            @*@Html.(model => model.ToCategory, htmlAttributes: new { @class = "control-label col-md-2" })*@
            @*<div class="col-md-10">
                @Html.EditorFor(model => model.ToCategory, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ToCategory, "", new { @class = "text-danger" })
            </div>*@
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
